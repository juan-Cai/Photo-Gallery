{"ast":null,"code":"import { ɵgetAllInstancesOf as _getAllInstancesOf, ɵgetDefaultInstanceOf as _getDefaultInstanceOf, VERSION, ɵAngularFireSchedulers as _AngularFireSchedulers, ɵzoneWrap as _zoneWrap } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, NgModule, makeEnvironmentProviders, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { AppCheckInstances } from '@angular/fire/app-check';\nimport { AuthInstances } from '@angular/fire/auth';\nimport { registerVersion } from 'firebase/app';\nimport { auditTrail as auditTrail$1, collection as collection$1, collectionChanges as collectionChanges$1, collectionCount as collectionCount$1, collectionCountSnap as collectionCountSnap$1, collectionData as collectionData$1, doc as doc$1, docData as docData$1, fromRef as fromRef$1, snapToData as snapToData$1, sortedChanges as sortedChanges$1 } from 'rxfire/firestore';\nimport { addDoc as addDoc$1, aggregateFieldEqual as aggregateFieldEqual$1, aggregateQuerySnapshotEqual as aggregateQuerySnapshotEqual$1, and as and$1, clearIndexedDbPersistence as clearIndexedDbPersistence$1, collection as collection$2, collectionGroup as collectionGroup$1, connectFirestoreEmulator as connectFirestoreEmulator$1, deleteAllPersistentCacheIndexes as deleteAllPersistentCacheIndexes$1, deleteDoc as deleteDoc$1, deleteField as deleteField$1, disableNetwork as disableNetwork$1, disablePersistentCacheIndexAutoCreation as disablePersistentCacheIndexAutoCreation$1, doc as doc$2, documentId as documentId$1, enableIndexedDbPersistence as enableIndexedDbPersistence$1, enableMultiTabIndexedDbPersistence as enableMultiTabIndexedDbPersistence$1, enableNetwork as enableNetwork$1, enablePersistentCacheIndexAutoCreation as enablePersistentCacheIndexAutoCreation$1, endAt as endAt$1, endBefore as endBefore$1, getAggregateFromServer as getAggregateFromServer$1, getCountFromServer as getCountFromServer$1, getDoc as getDoc$1, getDocFromCache as getDocFromCache$1, getDocFromServer as getDocFromServer$1, getDocs as getDocs$1, getDocsFromCache as getDocsFromCache$1, getDocsFromServer as getDocsFromServer$1, getFirestore as getFirestore$1, getPersistentCacheIndexManager as getPersistentCacheIndexManager$1, increment as increment$1, initializeFirestore as initializeFirestore$1, limit as limit$1, limitToLast as limitToLast$1, loadBundle as loadBundle$1, namedQuery as namedQuery$1, onSnapshot as onSnapshot$1, onSnapshotsInSync as onSnapshotsInSync$1, or as or$1, orderBy as orderBy$1, query as query$1, queryEqual as queryEqual$1, refEqual as refEqual$1, runTransaction as runTransaction$1, setDoc as setDoc$1, setIndexConfiguration as setIndexConfiguration$1, setLogLevel as setLogLevel$1, snapshotEqual as snapshotEqual$1, startAfter as startAfter$1, startAt as startAt$1, sum as sum$1, terminate as terminate$1, updateDoc as updateDoc$1, vector as vector$1, waitForPendingWrites as waitForPendingWrites$1, where as where$1, writeBatch as writeBatch$1 } from 'firebase/firestore';\nexport * from 'firebase/firestore';\nclass Firestore {\n  constructor(firestore) {\n    return firestore;\n  }\n}\nconst FIRESTORE_PROVIDER_NAME = 'firestore';\nclass FirestoreInstances {\n  constructor() {\n    return _getAllInstancesOf(FIRESTORE_PROVIDER_NAME);\n  }\n}\nconst firestoreInstance$ = timer(0, 300).pipe(concatMap(() => from(_getAllInstancesOf(FIRESTORE_PROVIDER_NAME))), distinct());\nconst PROVIDED_FIRESTORE_INSTANCES = new InjectionToken('angularfire2.firestore-instances');\nfunction defaultFirestoreInstanceFactory(provided, defaultApp) {\n  const defaultFirestore = _getDefaultInstanceOf(FIRESTORE_PROVIDER_NAME, provided, defaultApp);\n  return defaultFirestore && new Firestore(defaultFirestore);\n}\nfunction firestoreInstanceFactory(fn) {\n  return (zone, injector) => {\n    const firestore = zone.runOutsideAngular(() => fn(injector));\n    return new Firestore(firestore);\n  };\n}\nconst FIRESTORE_INSTANCES_PROVIDER = {\n  provide: FirestoreInstances,\n  deps: [[new Optional(), PROVIDED_FIRESTORE_INSTANCES]]\n};\nconst DEFAULT_FIRESTORE_INSTANCE_PROVIDER = {\n  provide: Firestore,\n  useFactory: defaultFirestoreInstanceFactory,\n  deps: [[new Optional(), PROVIDED_FIRESTORE_INSTANCES], FirebaseApp]\n};\nclass FirestoreModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'fst');\n  }\n  static ɵfac = function FirestoreModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FirestoreModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FirestoreModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DEFAULT_FIRESTORE_INSTANCE_PROVIDER, FIRESTORE_INSTANCES_PROVIDER]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FirestoreModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_FIRESTORE_INSTANCE_PROVIDER, FIRESTORE_INSTANCES_PROVIDER]\n    }]\n  }], () => [], null);\n})();\nfunction provideFirestore(fn, ...deps) {\n  registerVersion('angularfire', VERSION.full, 'fst');\n  return makeEnvironmentProviders([DEFAULT_FIRESTORE_INSTANCE_PROVIDER, FIRESTORE_INSTANCES_PROVIDER, {\n    provide: PROVIDED_FIRESTORE_INSTANCES,\n    useFactory: firestoreInstanceFactory(fn),\n    multi: true,\n    deps: [NgZone, Injector, _AngularFireSchedulers, FirebaseApps,\n    // Firestore+Auth work better if Auth is loaded first\n    [new Optional(), AuthInstances], [new Optional(), AppCheckInstances], ...deps]\n  }]);\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst auditTrail = _zoneWrap(auditTrail$1, true);\nconst collectionSnapshots = _zoneWrap(collection$1, true);\nconst collectionChanges = _zoneWrap(collectionChanges$1, true);\nconst collectionCount = _zoneWrap(collectionCount$1, true);\nconst collectionCountSnap = _zoneWrap(collectionCountSnap$1, true);\nconst collectionData = _zoneWrap(collectionData$1, true);\nconst docSnapshots = _zoneWrap(doc$1, true);\nconst docData = _zoneWrap(docData$1, true);\nconst fromRef = _zoneWrap(fromRef$1, true);\nconst snapToData = _zoneWrap(snapToData$1, true);\nconst sortedChanges = _zoneWrap(sortedChanges$1, true);\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst addDoc = _zoneWrap(addDoc$1, true, 2);\nconst aggregateFieldEqual = _zoneWrap(aggregateFieldEqual$1, true, 2);\nconst aggregateQuerySnapshotEqual = _zoneWrap(aggregateQuerySnapshotEqual$1, true, 2);\nconst and = _zoneWrap(and$1, true, 2);\nconst clearIndexedDbPersistence = _zoneWrap(clearIndexedDbPersistence$1, true);\nconst collection = _zoneWrap(collection$2, true, 2);\nconst collectionGroup = _zoneWrap(collectionGroup$1, true, 2);\nconst connectFirestoreEmulator = _zoneWrap(connectFirestoreEmulator$1, true);\nconst deleteAllPersistentCacheIndexes = _zoneWrap(deleteAllPersistentCacheIndexes$1, true);\nconst deleteDoc = _zoneWrap(deleteDoc$1, true, 2);\nconst deleteField = _zoneWrap(deleteField$1, true, 2);\nconst disableNetwork = _zoneWrap(disableNetwork$1, true);\nconst disablePersistentCacheIndexAutoCreation = _zoneWrap(disablePersistentCacheIndexAutoCreation$1, true);\nconst doc = _zoneWrap(doc$2, true, 2);\nconst documentId = _zoneWrap(documentId$1, true, 2);\nconst enableIndexedDbPersistence = _zoneWrap(enableIndexedDbPersistence$1, true);\nconst enableMultiTabIndexedDbPersistence = _zoneWrap(enableMultiTabIndexedDbPersistence$1, true);\nconst enableNetwork = _zoneWrap(enableNetwork$1, true);\nconst enablePersistentCacheIndexAutoCreation = _zoneWrap(enablePersistentCacheIndexAutoCreation$1, true);\nconst endAt = _zoneWrap(endAt$1, true, 2);\nconst endBefore = _zoneWrap(endBefore$1, true, 2);\nconst getAggregateFromServer = _zoneWrap(getAggregateFromServer$1, true);\nconst getCountFromServer = _zoneWrap(getCountFromServer$1, true);\nconst getDoc = _zoneWrap(getDoc$1, true);\nconst getDocFromCache = _zoneWrap(getDocFromCache$1, true);\nconst getDocFromServer = _zoneWrap(getDocFromServer$1, true);\nconst getDocs = _zoneWrap(getDocs$1, true);\nconst getDocsFromCache = _zoneWrap(getDocsFromCache$1, true);\nconst getDocsFromServer = _zoneWrap(getDocsFromServer$1, true);\nconst getFirestore = _zoneWrap(getFirestore$1, true);\nconst getPersistentCacheIndexManager = _zoneWrap(getPersistentCacheIndexManager$1, true);\nconst increment = _zoneWrap(increment$1, true, 2);\nconst initializeFirestore = _zoneWrap(initializeFirestore$1, true);\nconst limit = _zoneWrap(limit$1, true, 2);\nconst limitToLast = _zoneWrap(limitToLast$1, true, 2);\nconst loadBundle = _zoneWrap(loadBundle$1, true);\nconst namedQuery = _zoneWrap(namedQuery$1, true, 2);\nconst onSnapshot = _zoneWrap(onSnapshot$1, true);\nconst onSnapshotsInSync = _zoneWrap(onSnapshotsInSync$1, true);\nconst or = _zoneWrap(or$1, true, 2);\nconst orderBy = _zoneWrap(orderBy$1, true, 2);\nconst query = _zoneWrap(query$1, true, 2);\nconst queryEqual = _zoneWrap(queryEqual$1, true, 2);\nconst refEqual = _zoneWrap(refEqual$1, true, 2);\nconst runTransaction = _zoneWrap(runTransaction$1, true);\nconst setDoc = _zoneWrap(setDoc$1, true, 2);\nconst setIndexConfiguration = _zoneWrap(setIndexConfiguration$1, true);\nconst setLogLevel = _zoneWrap(setLogLevel$1, true);\nconst snapshotEqual = _zoneWrap(snapshotEqual$1, true, 2);\nconst startAfter = _zoneWrap(startAfter$1, true, 2);\nconst startAt = _zoneWrap(startAt$1, true, 2);\nconst sum = _zoneWrap(sum$1, true, 2);\nconst terminate = _zoneWrap(terminate$1, true);\nconst updateDoc = _zoneWrap(updateDoc$1, true, 2);\nconst vector = _zoneWrap(vector$1, true, 2);\nconst waitForPendingWrites = _zoneWrap(waitForPendingWrites$1, true);\nconst where = _zoneWrap(where$1, true, 2);\nconst writeBatch = _zoneWrap(writeBatch$1, true, 2);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Firestore, FirestoreInstances, FirestoreModule, addDoc, aggregateFieldEqual, aggregateQuerySnapshotEqual, and, auditTrail, clearIndexedDbPersistence, collection, collectionChanges, collectionCount, collectionCountSnap, collectionData, collectionGroup, collectionSnapshots, connectFirestoreEmulator, deleteAllPersistentCacheIndexes, deleteDoc, deleteField, disableNetwork, disablePersistentCacheIndexAutoCreation, doc, docData, docSnapshots, documentId, enableIndexedDbPersistence, enableMultiTabIndexedDbPersistence, enableNetwork, enablePersistentCacheIndexAutoCreation, endAt, endBefore, firestoreInstance$, fromRef, getAggregateFromServer, getCountFromServer, getDoc, getDocFromCache, getDocFromServer, getDocs, getDocsFromCache, getDocsFromServer, getFirestore, getPersistentCacheIndexManager, increment, initializeFirestore, limit, limitToLast, loadBundle, namedQuery, onSnapshot, onSnapshotsInSync, or, orderBy, provideFirestore, query, queryEqual, refEqual, runTransaction, setDoc, setIndexConfiguration, setLogLevel, snapToData, snapshotEqual, sortedChanges, startAfter, startAt, sum, terminate, updateDoc, vector, waitForPendingWrites, where, writeBatch };","map":{"version":3,"names":["ɵgetAllInstancesOf","_getAllInstancesOf","ɵgetDefaultInstanceOf","_getDefaultInstanceOf","VERSION","ɵAngularFireSchedulers","_AngularFireSchedulers","ɵzoneWrap","_zoneWrap","timer","from","concatMap","distinct","i0","InjectionToken","Optional","NgModule","makeEnvironmentProviders","NgZone","Injector","FirebaseApp","FirebaseApps","AppCheckInstances","AuthInstances","registerVersion","auditTrail","auditTrail$1","collection","collection$1","collectionChanges","collectionChanges$1","collectionCount","collectionCount$1","collectionCountSnap","collectionCountSnap$1","collectionData","collectionData$1","doc","doc$1","docData","docData$1","fromRef","fromRef$1","snapToData","snapToData$1","sortedChanges","sortedChanges$1","addDoc","addDoc$1","aggregateFieldEqual","aggregateFieldEqual$1","aggregateQuerySnapshotEqual","aggregateQuerySnapshotEqual$1","and","and$1","clearIndexedDbPersistence","clearIndexedDbPersistence$1","collection$2","collectionGroup","collectionGroup$1","connectFirestoreEmulator","connectFirestoreEmulator$1","deleteAllPersistentCacheIndexes","deleteAllPersistentCacheIndexes$1","deleteDoc","deleteDoc$1","deleteField","deleteField$1","disableNetwork","disableNetwork$1","disablePersistentCacheIndexAutoCreation","disablePersistentCacheIndexAutoCreation$1","doc$2","documentId","documentId$1","enableIndexedDbPersistence","enableIndexedDbPersistence$1","enableMultiTabIndexedDbPersistence","enableMultiTabIndexedDbPersistence$1","enableNetwork","enableNetwork$1","enablePersistentCacheIndexAutoCreation","enablePersistentCacheIndexAutoCreation$1","endAt","endAt$1","endBefore","endBefore$1","getAggregateFromServer","getAggregateFromServer$1","getCountFromServer","getCountFromServer$1","getDoc","getDoc$1","getDocFromCache","getDocFromCache$1","getDocFromServer","getDocFromServer$1","getDocs","getDocs$1","getDocsFromCache","getDocsFromCache$1","getDocsFromServer","getDocsFromServer$1","getFirestore","getFirestore$1","getPersistentCacheIndexManager","getPersistentCacheIndexManager$1","increment","increment$1","initializeFirestore","initializeFirestore$1","limit","limit$1","limitToLast","limitToLast$1","loadBundle","loadBundle$1","namedQuery","namedQuery$1","onSnapshot","onSnapshot$1","onSnapshotsInSync","onSnapshotsInSync$1","or","or$1","orderBy","orderBy$1","query","query$1","queryEqual","queryEqual$1","refEqual","refEqual$1","runTransaction","runTransaction$1","setDoc","setDoc$1","setIndexConfiguration","setIndexConfiguration$1","setLogLevel","setLogLevel$1","snapshotEqual","snapshotEqual$1","startAfter","startAfter$1","startAt","startAt$1","sum","sum$1","terminate","terminate$1","updateDoc","updateDoc$1","vector","vector$1","waitForPendingWrites","waitForPendingWrites$1","where","where$1","writeBatch","writeBatch$1","Firestore","constructor","firestore","FIRESTORE_PROVIDER_NAME","FirestoreInstances","firestoreInstance$","pipe","PROVIDED_FIRESTORE_INSTANCES","defaultFirestoreInstanceFactory","provided","defaultApp","defaultFirestore","firestoreInstanceFactory","fn","zone","injector","runOutsideAngular","FIRESTORE_INSTANCES_PROVIDER","provide","deps","DEFAULT_FIRESTORE_INSTANCE_PROVIDER","useFactory","FirestoreModule","full","ɵfac","FirestoreModule_Factory","__ngFactoryType__","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","providers","ngDevMode","ɵsetClassMetadata","args","provideFirestore","multi","collectionSnapshots","docSnapshots"],"sources":["/workspaces/Photo-Gallery/node_modules/@angular/fire/fesm2022/angular-fire-firestore.mjs"],"sourcesContent":["import { ɵgetAllInstancesOf as _getAllInstancesOf, ɵgetDefaultInstanceOf as _getDefaultInstanceOf, VERSION, ɵAngularFireSchedulers as _AngularFireSchedulers, ɵzoneWrap as _zoneWrap } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, NgModule, makeEnvironmentProviders, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { AppCheckInstances } from '@angular/fire/app-check';\nimport { AuthInstances } from '@angular/fire/auth';\nimport { registerVersion } from 'firebase/app';\nimport { auditTrail as auditTrail$1, collection as collection$1, collectionChanges as collectionChanges$1, collectionCount as collectionCount$1, collectionCountSnap as collectionCountSnap$1, collectionData as collectionData$1, doc as doc$1, docData as docData$1, fromRef as fromRef$1, snapToData as snapToData$1, sortedChanges as sortedChanges$1 } from 'rxfire/firestore';\nimport { addDoc as addDoc$1, aggregateFieldEqual as aggregateFieldEqual$1, aggregateQuerySnapshotEqual as aggregateQuerySnapshotEqual$1, and as and$1, clearIndexedDbPersistence as clearIndexedDbPersistence$1, collection as collection$2, collectionGroup as collectionGroup$1, connectFirestoreEmulator as connectFirestoreEmulator$1, deleteAllPersistentCacheIndexes as deleteAllPersistentCacheIndexes$1, deleteDoc as deleteDoc$1, deleteField as deleteField$1, disableNetwork as disableNetwork$1, disablePersistentCacheIndexAutoCreation as disablePersistentCacheIndexAutoCreation$1, doc as doc$2, documentId as documentId$1, enableIndexedDbPersistence as enableIndexedDbPersistence$1, enableMultiTabIndexedDbPersistence as enableMultiTabIndexedDbPersistence$1, enableNetwork as enableNetwork$1, enablePersistentCacheIndexAutoCreation as enablePersistentCacheIndexAutoCreation$1, endAt as endAt$1, endBefore as endBefore$1, getAggregateFromServer as getAggregateFromServer$1, getCountFromServer as getCountFromServer$1, getDoc as getDoc$1, getDocFromCache as getDocFromCache$1, getDocFromServer as getDocFromServer$1, getDocs as getDocs$1, getDocsFromCache as getDocsFromCache$1, getDocsFromServer as getDocsFromServer$1, getFirestore as getFirestore$1, getPersistentCacheIndexManager as getPersistentCacheIndexManager$1, increment as increment$1, initializeFirestore as initializeFirestore$1, limit as limit$1, limitToLast as limitToLast$1, loadBundle as loadBundle$1, namedQuery as namedQuery$1, onSnapshot as onSnapshot$1, onSnapshotsInSync as onSnapshotsInSync$1, or as or$1, orderBy as orderBy$1, query as query$1, queryEqual as queryEqual$1, refEqual as refEqual$1, runTransaction as runTransaction$1, setDoc as setDoc$1, setIndexConfiguration as setIndexConfiguration$1, setLogLevel as setLogLevel$1, snapshotEqual as snapshotEqual$1, startAfter as startAfter$1, startAt as startAt$1, sum as sum$1, terminate as terminate$1, updateDoc as updateDoc$1, vector as vector$1, waitForPendingWrites as waitForPendingWrites$1, where as where$1, writeBatch as writeBatch$1 } from 'firebase/firestore';\nexport * from 'firebase/firestore';\n\nclass Firestore {\n    constructor(firestore) {\n        return firestore;\n    }\n}\nconst FIRESTORE_PROVIDER_NAME = 'firestore';\nclass FirestoreInstances {\n    constructor() {\n        return _getAllInstancesOf(FIRESTORE_PROVIDER_NAME);\n    }\n}\nconst firestoreInstance$ = timer(0, 300).pipe(concatMap(() => from(_getAllInstancesOf(FIRESTORE_PROVIDER_NAME))), distinct());\n\nconst PROVIDED_FIRESTORE_INSTANCES = new InjectionToken('angularfire2.firestore-instances');\nfunction defaultFirestoreInstanceFactory(provided, defaultApp) {\n    const defaultFirestore = _getDefaultInstanceOf(FIRESTORE_PROVIDER_NAME, provided, defaultApp);\n    return defaultFirestore && new Firestore(defaultFirestore);\n}\nfunction firestoreInstanceFactory(fn) {\n    return (zone, injector) => {\n        const firestore = zone.runOutsideAngular(() => fn(injector));\n        return new Firestore(firestore);\n    };\n}\nconst FIRESTORE_INSTANCES_PROVIDER = {\n    provide: FirestoreInstances,\n    deps: [\n        [new Optional(), PROVIDED_FIRESTORE_INSTANCES],\n    ]\n};\nconst DEFAULT_FIRESTORE_INSTANCE_PROVIDER = {\n    provide: Firestore,\n    useFactory: defaultFirestoreInstanceFactory,\n    deps: [\n        [new Optional(), PROVIDED_FIRESTORE_INSTANCES],\n        FirebaseApp,\n    ]\n};\nclass FirestoreModule {\n    constructor() {\n        registerVersion('angularfire', VERSION.full, 'fst');\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.0.0\", ngImport: i0, type: FirestoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.0.0\", ngImport: i0, type: FirestoreModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.0.0\", ngImport: i0, type: FirestoreModule, providers: [\n            DEFAULT_FIRESTORE_INSTANCE_PROVIDER,\n            FIRESTORE_INSTANCES_PROVIDER,\n        ] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.0.0\", ngImport: i0, type: FirestoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        DEFAULT_FIRESTORE_INSTANCE_PROVIDER,\n                        FIRESTORE_INSTANCES_PROVIDER,\n                    ]\n                }]\n        }], ctorParameters: () => [] });\nfunction provideFirestore(fn, ...deps) {\n    registerVersion('angularfire', VERSION.full, 'fst');\n    return makeEnvironmentProviders([\n        DEFAULT_FIRESTORE_INSTANCE_PROVIDER,\n        FIRESTORE_INSTANCES_PROVIDER,\n        {\n            provide: PROVIDED_FIRESTORE_INSTANCES,\n            useFactory: firestoreInstanceFactory(fn),\n            multi: true,\n            deps: [\n                NgZone,\n                Injector,\n                _AngularFireSchedulers,\n                FirebaseApps,\n                // Firestore+Auth work better if Auth is loaded first\n                [new Optional(), AuthInstances],\n                [new Optional(), AppCheckInstances],\n                ...deps,\n            ]\n        }\n    ]);\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst auditTrail = _zoneWrap(auditTrail$1, true);\nconst collectionSnapshots = _zoneWrap(collection$1, true);\nconst collectionChanges = _zoneWrap(collectionChanges$1, true);\nconst collectionCount = _zoneWrap(collectionCount$1, true);\nconst collectionCountSnap = _zoneWrap(collectionCountSnap$1, true);\nconst collectionData = _zoneWrap(collectionData$1, true);\nconst docSnapshots = _zoneWrap(doc$1, true);\nconst docData = _zoneWrap(docData$1, true);\nconst fromRef = _zoneWrap(fromRef$1, true);\nconst snapToData = _zoneWrap(snapToData$1, true);\nconst sortedChanges = _zoneWrap(sortedChanges$1, true);\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst addDoc = _zoneWrap(addDoc$1, true, 2);\nconst aggregateFieldEqual = _zoneWrap(aggregateFieldEqual$1, true, 2);\nconst aggregateQuerySnapshotEqual = _zoneWrap(aggregateQuerySnapshotEqual$1, true, 2);\nconst and = _zoneWrap(and$1, true, 2);\nconst clearIndexedDbPersistence = _zoneWrap(clearIndexedDbPersistence$1, true);\nconst collection = _zoneWrap(collection$2, true, 2);\nconst collectionGroup = _zoneWrap(collectionGroup$1, true, 2);\nconst connectFirestoreEmulator = _zoneWrap(connectFirestoreEmulator$1, true);\nconst deleteAllPersistentCacheIndexes = _zoneWrap(deleteAllPersistentCacheIndexes$1, true);\nconst deleteDoc = _zoneWrap(deleteDoc$1, true, 2);\nconst deleteField = _zoneWrap(deleteField$1, true, 2);\nconst disableNetwork = _zoneWrap(disableNetwork$1, true);\nconst disablePersistentCacheIndexAutoCreation = _zoneWrap(disablePersistentCacheIndexAutoCreation$1, true);\nconst doc = _zoneWrap(doc$2, true, 2);\nconst documentId = _zoneWrap(documentId$1, true, 2);\nconst enableIndexedDbPersistence = _zoneWrap(enableIndexedDbPersistence$1, true);\nconst enableMultiTabIndexedDbPersistence = _zoneWrap(enableMultiTabIndexedDbPersistence$1, true);\nconst enableNetwork = _zoneWrap(enableNetwork$1, true);\nconst enablePersistentCacheIndexAutoCreation = _zoneWrap(enablePersistentCacheIndexAutoCreation$1, true);\nconst endAt = _zoneWrap(endAt$1, true, 2);\nconst endBefore = _zoneWrap(endBefore$1, true, 2);\nconst getAggregateFromServer = _zoneWrap(getAggregateFromServer$1, true);\nconst getCountFromServer = _zoneWrap(getCountFromServer$1, true);\nconst getDoc = _zoneWrap(getDoc$1, true);\nconst getDocFromCache = _zoneWrap(getDocFromCache$1, true);\nconst getDocFromServer = _zoneWrap(getDocFromServer$1, true);\nconst getDocs = _zoneWrap(getDocs$1, true);\nconst getDocsFromCache = _zoneWrap(getDocsFromCache$1, true);\nconst getDocsFromServer = _zoneWrap(getDocsFromServer$1, true);\nconst getFirestore = _zoneWrap(getFirestore$1, true);\nconst getPersistentCacheIndexManager = _zoneWrap(getPersistentCacheIndexManager$1, true);\nconst increment = _zoneWrap(increment$1, true, 2);\nconst initializeFirestore = _zoneWrap(initializeFirestore$1, true);\nconst limit = _zoneWrap(limit$1, true, 2);\nconst limitToLast = _zoneWrap(limitToLast$1, true, 2);\nconst loadBundle = _zoneWrap(loadBundle$1, true);\nconst namedQuery = _zoneWrap(namedQuery$1, true, 2);\nconst onSnapshot = _zoneWrap(onSnapshot$1, true);\nconst onSnapshotsInSync = _zoneWrap(onSnapshotsInSync$1, true);\nconst or = _zoneWrap(or$1, true, 2);\nconst orderBy = _zoneWrap(orderBy$1, true, 2);\nconst query = _zoneWrap(query$1, true, 2);\nconst queryEqual = _zoneWrap(queryEqual$1, true, 2);\nconst refEqual = _zoneWrap(refEqual$1, true, 2);\nconst runTransaction = _zoneWrap(runTransaction$1, true);\nconst setDoc = _zoneWrap(setDoc$1, true, 2);\nconst setIndexConfiguration = _zoneWrap(setIndexConfiguration$1, true);\nconst setLogLevel = _zoneWrap(setLogLevel$1, true);\nconst snapshotEqual = _zoneWrap(snapshotEqual$1, true, 2);\nconst startAfter = _zoneWrap(startAfter$1, true, 2);\nconst startAt = _zoneWrap(startAt$1, true, 2);\nconst sum = _zoneWrap(sum$1, true, 2);\nconst terminate = _zoneWrap(terminate$1, true);\nconst updateDoc = _zoneWrap(updateDoc$1, true, 2);\nconst vector = _zoneWrap(vector$1, true, 2);\nconst waitForPendingWrites = _zoneWrap(waitForPendingWrites$1, true);\nconst where = _zoneWrap(where$1, true, 2);\nconst writeBatch = _zoneWrap(writeBatch$1, true, 2);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Firestore, FirestoreInstances, FirestoreModule, addDoc, aggregateFieldEqual, aggregateQuerySnapshotEqual, and, auditTrail, clearIndexedDbPersistence, collection, collectionChanges, collectionCount, collectionCountSnap, collectionData, collectionGroup, collectionSnapshots, connectFirestoreEmulator, deleteAllPersistentCacheIndexes, deleteDoc, deleteField, disableNetwork, disablePersistentCacheIndexAutoCreation, doc, docData, docSnapshots, documentId, enableIndexedDbPersistence, enableMultiTabIndexedDbPersistence, enableNetwork, enablePersistentCacheIndexAutoCreation, endAt, endBefore, firestoreInstance$, fromRef, getAggregateFromServer, getCountFromServer, getDoc, getDocFromCache, getDocFromServer, getDocs, getDocsFromCache, getDocsFromServer, getFirestore, getPersistentCacheIndexManager, increment, initializeFirestore, limit, limitToLast, loadBundle, namedQuery, onSnapshot, onSnapshotsInSync, or, orderBy, provideFirestore, query, queryEqual, refEqual, runTransaction, setDoc, setIndexConfiguration, setLogLevel, snapToData, snapshotEqual, sortedChanges, startAfter, startAt, sum, terminate, updateDoc, vector, waitForPendingWrites, where, writeBatch };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}