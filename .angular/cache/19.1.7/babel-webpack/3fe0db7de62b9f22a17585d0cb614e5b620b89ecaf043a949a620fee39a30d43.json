{"ast":null,"code":"import _asyncToGenerator from \"/workspaces/Photo-Gallery/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Camera, CameraResultType, CameraSource } from '@capacitor/camera';\nimport { Capacitor } from '@capacitor/core';\nimport { Filesystem, Directory } from '@capacitor/filesystem';\nimport { Preferences } from '@capacitor/preferences';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nexport class PhotoService {\n  constructor(platform) {\n    this.photos = []; // Ref to Photo Storage\n    this.PHOTO_STORAGE = 'photos';\n    this.convertBlobToBase64 = blob => new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onerror = reject;\n      reader.onload = () => {\n        resolve(reader.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n    this.platform = platform;\n  }\n  // Metodo agregar nuevo\n  addNewToGallery(photosService) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.photos = [];\n      // Take a photo\n      const capturedPhoto = yield Camera.getPhoto({\n        resultType: CameraResultType.Uri,\n        source: CameraSource.Camera,\n        quality: 100\n      });\n      const savedImageFile = yield _this.savePicture(capturedPhoto);\n      _this.photos.unshift(savedImageFile);\n      Preferences.set({\n        key: _this.PHOTO_STORAGE,\n        value: JSON.stringify(_this.photos)\n      });\n      console.log(\"aqui\");\n      console.log(_this.photos);\n      photosService.nextPhoto(_this.photos);\n    })();\n  }\n  // Persistence of data images\n  savePicture(photo) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      // Convert photo to base64 format, required by Filesystem API to save\n      const base64Data = yield _this2.readAsBase64(photo);\n      // Write the file to the data directory\n      const fileName = Date.now() + '.jpeg';\n      const savedFile = yield Filesystem.writeFile({\n        path: fileName,\n        data: base64Data,\n        directory: Directory.Data\n      });\n      if (_this2.platform.is('hybrid')) {\n        // Display the new image by rewriting the 'file://' path to HTTP\n        // Details: https://ionicframework.com/docs/building/webview#file-protocol\n        return {\n          filepath: savedFile.uri,\n          webviewPath: Capacitor.convertFileSrc(savedFile.uri)\n        };\n      } else {\n        // Use webPath to display the new image instead of base64 since it's\n        // already loaded into memory\n        return {\n          filepath: fileName,\n          webviewPath: photo.webPath\n        };\n      }\n    })();\n  }\n  readAsBase64(photo) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      // \"hybrid\" will detect Cordova or Capacitor\n      if (_this3.platform.is('hybrid')) {\n        // Read the file into base64 format\n        const file = yield Filesystem.readFile({\n          path: photo.path\n        });\n        return file.data;\n      } else {\n        // Fetch the photo, read as a blob, then convert to base64 format\n        const response = yield fetch(photo.webPath);\n        const blob = yield response.blob();\n        return yield _this3.convertBlobToBase64(blob);\n      }\n    })();\n  }\n  loadSaved() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      // Retrieve cached photo array data\n      const {\n        value\n      } = yield Preferences.get({\n        key: _this4.PHOTO_STORAGE\n      });\n      _this4.photos = value ? JSON.parse(value) : [];\n      // more to come...\n      // Display the photo by reading into base64 format\n      if (!_this4.platform.is('hybrid')) {\n        for (let photo of _this4.photos) {\n          // Read each saved photo's data from the Filesystem\n          const readFile = yield Filesystem.readFile({\n            path: photo.filepath,\n            directory: Directory.Data\n          });\n          // Web platform only: Load the photo as base64 data\n          photo.webviewPath = `data:image/jpeg;base64,${readFile.data}`;\n        }\n      }\n    })();\n  }\n  deletePicture(photo, position, photos) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      // Remove this photo from the Photos reference data array\n      _this5.photos.splice(position, 1);\n      // Update photos array cache by overwriting the existing photo array\n      Preferences.set({\n        key: _this5.PHOTO_STORAGE,\n        value: JSON.stringify(_this5.photos)\n      });\n      // delete photo file from filesystem\n      const filename = photo.filepath.substr(photo.filepath.lastIndexOf('/') + 1);\n      yield Filesystem.deleteFile({\n        path: filename,\n        directory: Directory.Data\n      });\n      photos.nextPhoto([{\n        filepath: \"none\",\n        webviewPath: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRogTtOMPG5E_dGwITV6PsDJGAzJWZKQxIcZQ&s\"\n      }]);\n    })();\n  }\n  static {\n    this.ɵfac = function PhotoService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PhotoService)(i0.ɵɵinject(i1.Platform));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PhotoService,\n      factory: PhotoService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["Camera","CameraResultType","CameraSource","Capacitor","Filesystem","Directory","Preferences","PhotoService","constructor","platform","photos","PHOTO_STORAGE","convertBlobToBase64","blob","Promise","resolve","reject","reader","FileReader","onerror","onload","result","readAsDataURL","addNewToGallery","photosService","_this","_asyncToGenerator","capturedPhoto","getPhoto","resultType","Uri","source","quality","savedImageFile","savePicture","unshift","set","key","value","JSON","stringify","console","log","nextPhoto","photo","_this2","base64Data","readAsBase64","fileName","Date","now","savedFile","writeFile","path","data","directory","Data","is","filepath","uri","webviewPath","convertFileSrc","webPath","_this3","file","readFile","response","fetch","loadSaved","_this4","get","parse","deletePicture","position","_this5","splice","filename","substr","lastIndexOf","deleteFile","i0","ɵɵinject","i1","Platform","factory","ɵfac","providedIn"],"sources":["/workspaces/Photo-Gallery/src/app/services/photo.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Camera, CameraResultType, CameraSource, Photo } from '@capacitor/camera';\nimport { Capacitor } from '@capacitor/core';\nimport { Filesystem, Directory } from '@capacitor/filesystem';\nimport { Preferences } from '@capacitor/preferences';\nimport { Platform } from '@ionic/angular';\nimport { PhotosService } from '../photoServices/photos.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhotoService {\n\n  public photos: UserPhoto[] = []; // Ref to Photo Storage\n  private PHOTO_STORAGE: string = 'photos';\n  private platform: Platform;\n  constructor(platform: Platform) {\n    this.platform = platform;\n  }\n\n\n  // Metodo agregar nuevo\n  public async addNewToGallery(photosService: PhotosService) {\n    this.photos = [];\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 100\n    });\n\n    const savedImageFile = await this.savePicture(capturedPhoto);\n    this.photos.unshift(savedImageFile);\n\n    Preferences.set({\n      key: this.PHOTO_STORAGE,\n      value: JSON.stringify(this.photos),\n    });\n    console.log(\"aqui\");\n    console.log(this.photos);\n\n    photosService.nextPhoto(this.photos)\n  }\n\n  // Persistence of data images\n  private async savePicture(photo: Photo) {\n    // Convert photo to base64 format, required by Filesystem API to save\n    const base64Data = await this.readAsBase64(photo);\n\n    // Write the file to the data directory\n    const fileName = Date.now() + '.jpeg';\n    const savedFile = await Filesystem.writeFile({\n      path: fileName,\n      data: base64Data,\n      directory: Directory.Data\n    });\n    if (this.platform.is('hybrid')) {\n      // Display the new image by rewriting the 'file://' path to HTTP\n      // Details: https://ionicframework.com/docs/building/webview#file-protocol\n      return {\n        filepath: savedFile.uri,\n        webviewPath: Capacitor.convertFileSrc(savedFile.uri),\n      };\n    }\n    else {\n      // Use webPath to display the new image instead of base64 since it's\n      // already loaded into memory\n      return {\n        filepath: fileName,\n        webviewPath: photo.webPath\n      };\n    }\n  }\n\n  private async readAsBase64(photo: Photo) {\n    // \"hybrid\" will detect Cordova or Capacitor\n    if (this.platform.is('hybrid')) {\n      // Read the file into base64 format\n      const file = await Filesystem.readFile({\n        path: photo.path! \n      });\n\n      return file.data;\n    }\n    else {\n      // Fetch the photo, read as a blob, then convert to base64 format\n      const response = await fetch(photo.webPath!);\n      const blob = await response.blob();\n\n      return await this.convertBlobToBase64(blob) as string;\n    }\n  }\n\n  private convertBlobToBase64 = (blob: Blob) => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = reject;\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.readAsDataURL(blob);\n  });\n\n  public async loadSaved() {\n    // Retrieve cached photo array data\n    const { value } = await Preferences.get({ key: this.PHOTO_STORAGE });\n    this.photos = (value ? JSON.parse(value) : []) as UserPhoto[];\n\n    // more to come...\n    // Display the photo by reading into base64 format\n    if (!this.platform.is('hybrid')) {\n    for (let photo of this.photos) {\n      // Read each saved photo's data from the Filesystem\n      const readFile = await Filesystem.readFile({\n        path: photo.filepath,\n        directory: Directory.Data,\n      });\n\n      // Web platform only: Load the photo as base64 data\n      photo.webviewPath = `data:image/jpeg;base64,${readFile.data}`;\n    }\n  }\n  }\n\n  public async deletePicture(photo: UserPhoto, position: number, photos: PhotosService) {\n    // Remove this photo from the Photos reference data array\n    this.photos.splice(position, 1);\n  \n    // Update photos array cache by overwriting the existing photo array\n    Preferences.set({\n      key: this.PHOTO_STORAGE,\n      value: JSON.stringify(this.photos)\n    });\n  \n    // delete photo file from filesystem\n    const filename = photo.filepath\n                        .substr(photo.filepath.lastIndexOf('/') + 1);\n  \n    await Filesystem.deleteFile({\n      path: filename,\n      directory: Directory.Data\n    });\n    photos.nextPhoto([{filepath: \"none\", webviewPath:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRogTtOMPG5E_dGwITV6PsDJGAzJWZKQxIcZQ&s\"}]);\n  }\n\n\n\n}\n\n\n// Interface\nexport interface UserPhoto {\n  filepath: string;\n  webviewPath?: string;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}